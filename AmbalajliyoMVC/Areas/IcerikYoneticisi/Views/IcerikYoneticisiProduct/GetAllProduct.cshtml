@using AmbalajliyoMVC.Helper
@using AmbalajliyoMVC.ViewModels
@using X.PagedList;
@using X.PagedList.Extensions;
@using X.Web.PagedList

@model IPagedList<ProductViewModel>
@{
    var categories = ViewBag.Categories as List<CategoryViewModel>;
}

<div class="container">
    <div class="page-inner">
        <div class="page-header mb-4">
            <h3 class="fw-bold">Ürünler</h3>
            <ul class="breadcrumbs mb-3">
                <li class="nav-home">
                    <a href="#">
                        <i class="icon-home"></i>
                    </a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Ürünler</a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Ürün Listesi</a>
                </li>
            </ul>
        </div>

        <div class="mb-3">
            <a class="btn btn-outline-primary btn-lg" asp-action="CreateProduct">Yeni Ürün Ekle</a>
        </div>

        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card p-4 border-light shadow-sm">
                        <div class="row g-0">
                            <div class="col-md-12 mb-3">
                                <img src="~/Images.Products/@item.Image" class="img-fluid rounded" alt="Ürün Resmi" style="max-height: 200px; object-fit: cover;">
                            </div>
                            <div class="col-md-12">
                                <div class="card-body">
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="card-text">Açıklama: @item.Description</p>
                                    @{
                                        var categoryName = categories.FirstOrDefault(c => c.Id == item.CategoryId)?.Name;
                                        if (categoryName != null)
                                        {
                                            <p class="card-text">Kategori: @categoryName</p>
                                        }
                                    }
                                    <p class="card-text">@item.Price ₺</p>

                                    <div class="d-flex justify-content-between">
                                        <a class="btn btn-secondary btn-lg" asp-action="UpdateProduct" asp-route-id="@item.Id">Güncelle</a>
                                        <a class="btn btn-info btn-lg" asp-action="GetByIdProduct" asp-route-id="@item.Id">Detay</a>
                                        <form asp-action="DeleteProduct" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <button type="submit" class="btn btn-danger btn-lg">Sil</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="text-center">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAllProduct", new { page = Model.PageNumber - 1 })">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("GetAllProduct", new {page = i })">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAllProduct", new { page = Model.PageNumber + 1 })">Next</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteButtons = document.querySelectorAll('form[action*="/DeleteProduct"] button[type="submit"]');
            deleteButtons.forEach(function (button) {
                button.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent the form from submitting immediately
                    var form = button.closest('form'); // Find the closest form
                    var productName = button.closest('.card-body').querySelector('.card-title').innerText; // Get the product name from the card title

                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: `"${productName}" isimli ürünü silmek istediğinize emin misiniz?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit(); // Submit the form if confirmed
                        }
                    });
                });
            });
        });
    </script>
}
<style>
    /* Sayfalama kapsayıcısı */
    .text-center {
        text-align: center;
        margin-top: 20px;
    }

    /* Sayfalama liste stili */
    .pagination {
        display: inline-flex;
        padding-left: 0;
        list-style: none;
        border-radius: 0.25rem;
    }

    /* Sayfa düğmeleri */
    .page-item {
        margin: 0 2px;
    }

    .page-link {
        position: relative;
        display: block;
        padding: 0.5rem 0.75rem;
        margin: 0;
        line-height: 1.25;
        color: #333;
        text-align: center;
        background-color: #fff;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        text-decoration: none;
    }

    /* Aktif sayfa */
    .page-item.active .page-link {
        z-index: 1;
        color: #fff;
        background-color: #333;
        border-color: #333;
    }

    /* Sayfa düğmesine hover efekti */
    .page-link:hover {
        color: #333;
        background-color: #e9ecef;
        border-color: #ddd;
    }

    /* İlk ve son sayfa düğmeleri */
    .page-item:first-child .page-link,
    .page-item:last-child .page-link {
        border-radius: 0.25rem;
    }
</style>